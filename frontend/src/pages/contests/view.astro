---
import Avatar from "@/components/Avatar.astro";
import BreadCrumb from "@/components/BreadCrumb.astro";
import Button from "@/components/Button.astro";
import Progress from "@/components/Progress.astro";
import Tile from "@/components/Tile.astro";
import ProblemsTable from "@/components/table/ProblemsTable.astro";
import Else from "@/components/tera/Else.astro";
import For from "@/components/tera/For.astro";
import If from "@/components/tera/If.astro";
import Tag from "@/components/tera/Tag.astro";
import Variable from "@/components/tera/Variable.astro";
import Layout from "@/layouts/Layout.astro";
import { tag } from "@/lib/tera";
import { variable } from "@/lib/tera";
---

<Layout noGrow class="flex flex-col gap-4" title={variable("contest.name")}>
    <Tile>
        <BreadCrumb
            entries={[
                ["Contests", "/contests"],
                [variable("contest.name"), `/contests/${variable("contest.id")}`]
            ]}
        />
    </Tile>
    <Tile class="flex flex-row">
        <div class="flex flex-col">
            <hgroup>
                <h1 class="text-3xl font-bold">{variable("contest.name")}</h1>
                <small class="text-lg text-gray-500">
                    <b><Variable expression="start_formatted" /></b>
                    to
                    <b><Variable expression="end_formatted" /></b>
                    (<Variable expression="tz_name" />)
                </small>
            </hgroup>
        </div>
        <span class="grow"></span>
        <div class="flex flex-row gap-2 align-middle">
            <Button
                class:list={[
                    "my-auto",
                    import.meta.env.DEV ? "hidden" : `${tag("if not started and not is_admin", true)}hidden${tag("endif")}`
                ]}
                color="primary"
                id="go-to-problems"
                icon="tabler:puzzle"
                size="lg"
                as="a"
                href={`/contests/${variable("contest.id")}/problems`}>Problems</Button
            >
            <Button
                class:list={[
                    "my-auto",
                    import.meta.env.DEV ? "hidden" : `${tag("if not started and not is_admin", true)}hidden${tag("endif")}`
                ]}
                color="secondary"
                id="go-to-leaderboard"
                icon="tabler:trophy"
                size="lg"
                as="a"
                href={`/contests/${variable("contest.id")}/leaderboard`}>Leaderboard</Button
            >
            <If debugEval={true} expression="not started and not is_admin">
                <span id="countdown" class="my-auto text-xl text-gray-500">
                    Contest starts <span id="start-word">at</span>
                    <span data-time-str={variable("start_local_html", "2024-03-22T12:32:00")} id="start-time">
                        <Variable expression="start_formatted" debugEval="NEVER!!!" />
                    </span>
                </span>
            </If>
        </div>
    </Tile>
    <div class="flex h-full flex-row gap-4">
        <div class="flex h-full w-2/3 flex-col gap-4">
            <Tile class="flex flex-col gap-2">
                <h2 class="text-2xl font-bold">Description</h2>
                <p><Variable expression="contest.description" /></p>
            </Tile>
            <If debugEval={true} expression="logged_in and not is_admin and started and problems_total != 0">
                <Tile class="flex flex-col justify-center align-middle">
                    <label class="flex flex-col gap-2 text-2xl font-bold">
                        Your Progress
                        <div class="flex flex-row gap-4">
                            <Progress
                                class="my-auto w-full"
                                value={variable("problems_done", "14")}
                                max={variable("problems_total", "20")}
                            />
                            <span class="my-auto text-lg min-w-max">
                                <span>
                                    <Variable expression="problems_done" debugEval="14" />
                                    / <Variable expression="problems_total" debugEval="20" />
                                </span>
                                <span>(<Variable expression="problems_done / problems_total * 100 | round" debugEval="70" />%)</span>
                            </span>
                        </div>
                    </label>
                </Tile>
            </If>
            <If debugEval={true} expression="started or is_admin">
                <Tile class="flex flex-col gap-2 grow overflow-hidden">
                    <h2 class="text-2xl font-bold">Problems</h2>
                    <Tag expression="set contest_id = contest.id" />
                    <ProblemsTable class="overflow-y-auto" />
                    <If debugEval={true} expression="can_edit">
                        <Button class="w-fit self-end" as="a" href={`/contests/${variable("contest.id")}/problems/new`}>Create New Problem</Button>
                    </If>
                </Tile>
            </If>
        </div>
        <div class="flex h-full w-1/3 flex-col gap-4">
            <Tile class="flex h-1/2 flex-col gap-2 overflow-hidden">
                <h2 class="text-2xl font-bold">Judges</h2>
                <ul class="flex flex-col gap-2 overflow-auto">
                    <For itemName="participant" sourceList="judges">
                        <li class="flex flex-row gap-2">
                            <Avatar
                                size={35}
                                class="my-auto"
                                name={variable("participant.1.display_name")}
                                emailVar="participant.1.email"
                            />
                            <span class="my-auto"
                                ><Variable expression="participant.1.display_name" /></span
                            >
                        </li>
                        <Else>
                            <li>No Judges :(</li>
                        </Else>
                    </For>
                </ul>
            </Tile>
            <Tile class="flex h-1/2 flex-col gap-2 overflow-hidden">
                <h2 class="text-2xl font-bold">Participants</h2>
                <If debugEval={true} expression="contest.max_participants">
                    <span class="text-sm text-gray-500">
                        <Variable expression="participants | length" /> / <Variable
                            expression="contest.max_participants"
                        />
                    </span>
                </If>
                <ul class="flex flex-col gap-2 overflow-auto">
                    <For itemName="participant" sourceList="participants">
                        <li class="flex flex-row gap-2">
                            <Avatar
                                size={35}
                                class="my-auto"
                                name={variable("participant.1.display_name")}
                                emailVar="participant.1.email"
                            />
                            <span class="my-auto"
                                ><Variable expression="participant.1.display_name | default(value=participant.1.default_display_name)" /></span
                            >
                        </li>
                        <Else>
                            <li>No one has signed up yet</li>
                        </Else>
                    </For>
                </ul>
            </Tile>
        </div>
    </div>
</Layout>

<script>
    document.addEventListener("astro:page-load", () => {
        const startWord = document.getElementById("start-word") as HTMLElement | null;
        const startTime = document.getElementById("start-time") as HTMLElement | null;
        const countdown = document.getElementById("countdown") as HTMLElement | null;
        const goButton = document.getElementById("go-to-problems") as HTMLAnchorElement | null;
        const goButton2 = document.getElementById("go-to-leaderboard") as HTMLAnchorElement | null;

        const toggleButtons = (hidden: boolean) => {
            if (goButton && goButton2) {
                if (hidden) {
                    goButton.classList.add("hidden");
                    goButton2.classList.add("hidden");
                } else {
                    goButton.classList.remove("hidden");
                    goButton2.classList.remove("hidden");
                }
            }
        };

        if (startWord && startTime && countdown && goButton) {
            const start = new Date(startTime.dataset.timeStr as string);
            const now = new Date();
            if (start > now) {
                const updateTimer = () => {
                    const now = new Date();
                    const diff = start.getTime() - now.getTime();
                    if (diff <= 0) {
                        clearInterval(interval);
                        countdown.classList.add("hidden");
                        toggleButtons(false);
                    } else {
                        let days = Math.floor(diff / (1000 * 60 * 60 * 24)).toString();
                        days = days === "0" ? "" : `${days}d `;
                        let hours = Math.floor(
                            (diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)
                        ).toString();
                        hours = hours === "0" ? "" : `${hours}h `;
                        let minutes = Math.floor(
                            (diff % (1000 * 60 * 60)) / (1000 * 60)
                        ).toString();
                        minutes = minutes === "0" ? "" : `${minutes}m `;
                        const seconds = Math.floor((diff % (1000 * 60)) / 1000);
                        countdown.innerText = `Contest starts in ${days}${hours}${minutes}${seconds}s`;
                    }
                };
                updateTimer();
                const interval = setInterval(updateTimer, 1000);
            } else {
                countdown.classList.add("hidden");
                toggleButtons(false);
            }
        }
    });
</script>
