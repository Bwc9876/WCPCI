---
import BreadCrumb from "@/components/BreadCrumb.astro";
import Title from "@/components/Title.astro";
import Else from "@/components/tera/Else.astro";
import If from "@/components/tera/If.astro";
import Variable from "@/components/tera/Variable.astro";
import ContestLayout from "@/layouts/ContestLayout.astro";
import ProblemRun from "@/components/ProblemRun.astro";
import { variable } from "@/lib/tera";
import Button from "@/components/Button.astro";
import Tile from "@/components/Tile.astro";

const displayName = variable(
    "target_user.display_name | default(value=target_user.default_display_name)"
);
---

<ContestLayout
    showAdminVar="true"
    noIndex
    class="flex flex-col gap-4"
    title={`Run for ${displayName}`}
    path=`/contests/${variable("contest.id")}/admin/runs/problems/${variable("problem.slug")}/view/${variable("target_user.id")}`
>
    <Tile>
        <BreadCrumb
            entries={[
                ["Contests", "/contests"],
                [variable("contest.name"), `/contests/${variable("contest.id")}`],
                ["Admin", `/contests/${variable("contest.id")}/admin`],
                ["Runs", `/contests/${variable("contest.id")}/admin/runs`],
                [
                    variable("problem.name"),
                    `/contests/${variable("contest.id")}/admin/runs/problems/${variable("problem.slug")}`
                ],
                ["View", ""]
            ]}
        />
        <Title>Run for {displayName} in <Variable expression="problem.name" /> </Title>
        The most recent run and the most recent successful run for {displayName} in <Variable
            expression="problem.name"
        />.
    </Tile>
    <Tile class="flex flex-col gap-2">
        <h2 class="text-2xl font-bold">Most Recent Run</h2>
        <If expression="most_recent">
            <ProblemRun objName="most_recent" casesName="1" />
            <p>Language: <Variable expression="most_recent.language" /></p>
            <pre
                class=`overflow-x-auto language-${variable("most_recent.language", "python")}`><code id=`run-${variable("most_recent.id", "1")}-code`>{variable("most_recent.program")}</code></pre>
            <Button
                class="copy-button w-fit"
                color="secondary"
                data-program={variable("most_recent.program | json_encode()")}
                icon="tabler:clipboard">Copy to clipboard</Button
            >
            <Else slot="else">
                <p>No runs found.</p>
            </Else>
        </If>
    </Tile>
    <Tile class="flex flex-col gap-2">
        <h2 class="text-2xl font-bold">Most Recent Successful Run</h2>
        <If expression="success_recent">
            <ProblemRun objName="success_recent" casesName="1" />
            <p>Language: <Variable expression="success_recent.language" /></p>
            <pre
                class=`overflow-x-auto language-${variable("success_recent.language", "python")}`><code id=`s-run-${variable("success_recent.id", "1")}-code`>{variable("success_recent.program")}</code></pre>
            <Button
                class="copy-button w-fit"
                color="secondary"
                data-program={variable("success_recent.program | json_encode()")}
                icon="tabler:clipboard">Copy to clipboard</Button
            >
            <Else slot="else">
                <p>No successful runs found.</p>
            </Else>
        </If>
    </Tile>
</ContestLayout>

<script>
    document.addEventListener("astro:page-load", () => {
        document.querySelectorAll(".copy-button").forEach((button) => {
            button.addEventListener("click", (e) => {
                const target = e.target! as HTMLElement;
                const button = target.closest(".copy-button")! as HTMLButtonElement;
                const code = JSON.parse(button.dataset.program!);
                navigator.clipboard.writeText(code);
            });
        });

        import("@/lib/highlighting").then((c) => {
            console.debug("Setting Up Code Block Highlighting");
            c.default();
        });
    });
</script>

<style>
    pre code.hljs {
        @apply rounded-lg !bg-secondary-50;
    }
</style>
