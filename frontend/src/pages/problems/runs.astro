---
import BreadCrumb from "@/components/BreadCrumb.astro";
import Button from "@/components/Button.astro";
import Collapse from "@/components/Collapse.astro";
import ProblemRun from "@/components/ProblemRun.astro";
import Tile from "@/components/Tile.astro";
import Title from "@/components/Title.astro";
import Else from "@/components/tera/Else.astro";
import For from "@/components/tera/For.astro";
import If from "@/components/tera/If.astro";
import Variable from "@/components/tera/Variable.astro";
import ContestLayout from "@/layouts/ContestLayout.astro";
import { variable } from "@/lib/tera";

const problemRoute = `/contests/${variable("problem.contest_id")}/problems/${variable("problem.slug")}/runs`;
const defaultCode = 'def main():\n\tprint("Hello World!")\n\nmain()';
---

<ContestLayout
    noIndex
    path=`/contests/${variable("contest.id")}/problems/${variable("problem.slug")}/runs`
    class="flex flex-col gap-4"
    title={`Runs for ${variable("problem.name")}`}
>
    <Tile class="flex flex-col gap-4">
        <BreadCrumb
            entries={[
                ["Contests", "/contests"],
                [variable("contest.name"), `/contests/${variable("problem.contest_id")}`],
                ["Problems", `/contests/${variable("problem.contest_id")}/problems`],
                [
                    variable("problem.name"),
                    `/contests/${variable("problem.contest_id")}/problems/${variable("problem.slug")}`
                ],
                ["Runs", problemRoute]
            ]}
        />
        <Title>Your Runs For {variable("problem.name")}</Title>
        <For sourceList="runs" itemName="run">
            <Collapse noSummaryEndGrow>
                <ProblemRun
                    slot="summary"
                    timeExpr="formatted_times[loop.index0]"
                    casesName="case_count"
                    class="w-full bg-background-200"
                    objName="run"
                />
                <div class="flex flex-col gap-2">
                    <h3 class="text-lg font-semibold">
                        Program (<Variable expression="run.language" />)
                    </h3>
                    <pre
                        class=`overflow-x-auto language-${variable("run.language", "python")}`><code id=`run-${variable("run.id", "1")}-code`>{variable("run.program", defaultCode)}</code></pre>
                    <Button
                        class="copy-button w-fit"
                        color="secondary"
                        data-program={variable("run.program | json_encode()", defaultCode)}
                        data-run={variable("run.id", "1")}
                        icon="tabler:clipboard">Copy to clipboard</Button
                    >
                </div>
            </Collapse>

            <Else>
                <p class="p-4 text-center">You haven't attempted this problem yet.</p>
            </Else>
        </For>
        <If expression="runs | length >= max_runs">
            <p class="text-center">
                Only the last <Variable expression="max_runs" /> runs are kept in our database.
            </p>
        </If>
    </Tile>
</ContestLayout>

<script>
    document.addEventListener("astro:page-load", () => {
        document.querySelectorAll(".copy-button").forEach((button) => {
            button.addEventListener("click", (e) => {
                const target = e.target! as HTMLElement;
                const button = target.closest(".copy-button")! as HTMLButtonElement;
                const code = JSON.parse(button.dataset.program!);
                console.debug("Copying code to clipboard", code);
                navigator.clipboard.writeText(code);
            });
        });

        import("@/lib/highlighting").then((c) => {
            console.debug("Setting Up Code Block Highlighting");
            c.default();
        });
    });
</script>

<style>
    pre code.hljs {
        @apply rounded-lg !bg-secondary-50;
    }
</style>
