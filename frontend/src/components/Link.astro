---
import type { HTMLAttributes } from "astro/types";

export type Color = "primary" | "secondary" | "accent" | "white" | "danger" | "inherit";

export interface Props extends HTMLAttributes<"a"> {
    color?: Color;
    isExternal?: boolean;
}

const { isExternal, color = "accent", class: className, ...rest } = Astro.props;

const ColorMap = {
    primary: "text-primary hover:text-primary-500",
    secondary: "text-secondary-400 hover:text-secondary-500",
    accent: "text-accent hover:text-accent-600",
    white: "text-text-900 hover:text-text-500",
    danger: "text-red-500 hover:text-red-600",
    inherit: ""
} as Record<Color, string>;
---

<a
    class:list={["", ColorMap[color], className ?? ""]}
    rel=`${isExternal ? "noreferrer" : undefined}`
    target=`${isExternal ? "_blank" : "_self"}`
    {...rest}
>
    <slot />
</a>
