---
import { Icon } from "astro-icon/components";
import type { HTMLAttributes } from "astro/types";

export type Status = "idle" | "loading" | "success" | "error" | "empty" | string;

export const defaultIconMap: Record<Status, string> = {
    idle: "tabler:circle-dashed",
    loading: "tabler:circle-dashed",
    success: "tabler:circle-check",
    error: "tabler:circle-x",
    empty: "tabler:circle-dot"
};

export interface Props extends HTMLAttributes<"span"> {
    class?: string;
    size?: number;
    status?: Status;
    iconMap?: Record<Status, string>;
}

const {
    size = 25,
    class: className,
    status = "idle",
    iconMap = defaultIconMap,
    ...rest
} = Astro.props;

const baseClass = ["hidden"].join(" ");

const idleLoadClass = [
    "group-[[data-status=idle]]:inline",
    "group-[[data-status=idle]]:text-gray-500",
    "group-[[data-status=loading]]:inline",
    "group-[[data-status=loading]]:text-accent-600",
    "group-[[data-status=loading]]:animate-spin"
].join(" ");

const successClass = [
    "group-[[data-status=success]]:inline",
    "group-[[data-status=success]]:text-green-600"
].join(" ");

const errorClass = [
    "group-[[data-status=error]]:inline",
    "group-[[data-status=error]]:text-red-600"
].join(" ");

const emptyClass = [
    "group-[[data-status=empty]]:inline",
    "group-[[data-status=empty]]:text-gray-500"
].join(" ");
---

<span class:list={["group", className ?? ""]} data-status={status} {...rest}>
    <Icon size={size} name={iconMap["idle"]} class:list={[baseClass, idleLoadClass]} />
    <Icon size={size} name={iconMap["success"]} class:list={[baseClass, successClass]} />
    <Icon size={size} name={iconMap["error"]} class:list={[baseClass, errorClass]} />
    <Icon size={size} name={iconMap["empty"]} class:list={[baseClass, emptyClass]} />
</span>
